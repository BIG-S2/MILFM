% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_stage3.R
\name{fit_stage3}
\alias{fit_stage3}
\title{Stage (III) estimation}
\usage{
fit_stage3(input.x = stage2$factors_train, output.y = Y.train, keropt = 1,
  penalty = NULL, test.x = stage2$factors_test, test.y = Y.test,
  type = 2)
}
\arguments{
\item{input.x}{(matrix): the latent factor loadings for the training reduced matrix based on the output of 2nd stage.}

\item{output.y}{(vector):  the outcome Y}

\item{keropt}{(scalar): means the reproducing kernel. Specifically, there are options as 1=rbf, 2=linear, and 3= polynomial (default: 1 )}

\item{penalty}{(scalar): means regularized constant (default: 0:001 X n^(-2/3) )}

\item{test.x}{(matrix): the latent factor loadings for the test reduced matrix based on the output of 2nd stage  (default: NULL ) .}

\item{test.y}{(vector): the outcome Y test}

\item{type}{(scalar): means the fitting model type. Specifically, there are options as 1=kernel ridge regression and  2=support vector regression (required field )}
}
\value{
provides the fallowing outputs.
fx (vector): represents the fitted value for the training.
alpha (vector: represents the primal solution in the reproducing kernel space when the kernel ridge was used.
ybar (scalar): represents the average of the output.
labmda (scalar): number used as the regularized constant when the kernel ridge was used.
residual (vector): produces the residual for the training.
sigma2 (list[[2]): estimates the conditional variance of the outcome.
T_fx (vector): predicted values for the test.
T_residual (vector): produces the prediction error for the test dataset.
}
\description{
Fit nonparametric regression based on the repreducing kernel approach.
}
\examples{
###  generate dataset
####  stage 3 ##### run regression model
stage3_1 = fit_stage3(input.x=stage2$factors_train, output.y= Y.train, test.x=stage2$factors_test,test.y=Y.test, type= 1 )
## test error from kernel ridge estimator
test.error_1 =    sum( stage3_1$T_residual^2)/n.test
stage3_2 = fit_stage3(input.x=stage2$factors_train, output.y= Y.train, test.x=stage2$factors_test,test.y=Y.test, type= 2 )
## test error from support vector regression estimator
test.error_2 =    sum( stage3_2$T_residual^2)/n.test
}
