% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_stage2.R
\name{fit_stage2}
\alias{fit_stage2}
\title{Stage (II) estimation}
\usage{
fit_stage2(train.x = RX.train, test.x = NULL, thetas = c(0, 0.2, 0.4, 0.6,
  0.8), groups = c(1, 2, 4, 8, 10))
}
\arguments{
\item{train.x}{(matrix): the reduced feature training matrix (X) represents  n x q matrix}

\item{test.x}{(matrix):  the reduced feature test matrix (X) represents  n x q matrix  (default: NULL )}

\item{thetas}{(vector): represents thresholdings for the correlation matrix (default:  c(0, 0.2, 0.4, 0.6, 0.8  )  )}

\item{groups}{(vector): represents the number of the group correponding to the thetas (default:  c( 1, 2, 4, 8, 10)  )}
}
\value{
provides output, where
 factors_train (list[[1]): represents the latent factor loadings for the training reduced matrix, and
 factors_train (list[[2]): represents the latent factor loadings for the test reduced matrix.
}
\description{
Conduct aggregation procedure based on the output of 1st stage.
}
\examples{
###  generate dataset
data1 = dataset(v.nonsparse=c( 300, 300),  n.sparse=2500 ,  level= 0.02, N= 200   )
X = data1[[1]]
Y = data1[[2]]
###  spit dataset into train and test
N= dim(X)[1]
T.row=seq( N )
Test=sort( sample(N)[1:(N*0.5)] )
Train=sort( T.row[-Test] )
X.train=X[Train, ]
X.test=X[Test,  ]
Y.train=Y[Train ]
Y.test=Y[Test ]
n.train=length(Y.train)
n.test=length(Y.test)
p=dim(X.train)[2]
SET_HS =  order(stage1,decreasing=TRUE)
plot(  stage1, xlab="X", ylab="signals")
G.NUM = 450
RX.train =X.train[, sort(SET_HS[1:G.NUM])  ]
RX.test = X.test [, sort(SET_HS[1:G.NUM])  ]
stage2 =  fit_stage2( RX.train , RX.test,  thetas = c(0, 0.2, 0.4, 0.6, 0.8  ) , groups = c( 1, 2, 4, 8, 10) )
}
